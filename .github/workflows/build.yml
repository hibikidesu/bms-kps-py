name: Build binary

on:
  push:
    branches:
      - "master"

jobs:
  release:
    name: Create github release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  ubuntu:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install packages
      run: |
        sudo apt update
        sudo apt install python-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsmpeg-dev python-numpy subversion libportmidi-dev ffmpeg libswscale-dev libavformat-dev libavcodec-dev
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install -U pygame pyinstaller
    - name: Build and publish
      run: |
        echo "Building"
        pyinstaller bms-kps.py -F -n bms-kps
        cp sdvx.json dist/
        cp pwan.json dist/
        zip -XT9vDrj ubuntu.zip dist/*
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./ubuntu.zip
        asset_name: ubuntu.zip
        asset_content_type: application/zip
  osx:
    runs-on: macos-latest
    needs: [release]
    steps:
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        brew install sdl2 sdl sdl_image sdl_mixer sdl_ttf portmidi
        python -m pip install -U pip
        pip install -U pygame pyinstaller
    - name: Build and publish
      run: |
        echo "Building"
        pyinstaller bms-kps.py -F -n bms-kps
        cp sdvx.json dist/
        cp pwan.json dist/
        zip -XT9vDrj osx.zip dist/*
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./osx.zip
        asset_name: osx.zip
        asset_content_type: application/zip
